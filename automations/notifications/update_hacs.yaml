alias: Updates HACS
trigger:
  platform: state
  entity_id: sensor.hacs
condition:
  - condition: template
    value_template: "{{ states(trigger.entity_id) != 'unknown'}}"
  - condition: template
    value_template: "{{ (states(trigger.entity_id) | float) != 0}}"
action:
  service: notify.mobile_app_iphone_de_p_a
  data_template:
    title: Updates pending in HACS
    message: >-
      {% for repo in state_attr(trigger.entity_id, 'repositories') %}
        **{{ repo.display_name }}** _{{ repo["installed_version"] }}_ -> _{{ repo["available_version"] }}_
      {% endfor %}

# alias: Update HACS
# trigger:
#   platform: numeric_state
#   entity_id: sensor.hacs
#   above: 1
# action:
#   - service: notify.mobile_app_iphone_de_p_a
#     data_template:
#       title: HACS
#       message: Une mise à jour HACS est dispo
#   - service: persistent_notification.create
#     data_template:
#       title: Upgrade time!
#       message: Une mise à jour HACS est dispo
